openapi: 3.0.1
info:
  title: Merchant API
  description: PointCheckout Merchant API
  version: "2.0"
servers:
- url: htps://api.pointcheckout.com
  description: PointCheckout live environment
- url: htps://api.test.pointcheckout.com
  description: PointCheckout test environment
tags:
- name: Checkout
  description: API endpoints for QR payments. Can be used for point of sale intagration.
paths:
  /api/mer/v2.0/checkout/{checkoutId}/refund:
    post:
      tags:
      - Checkout
      description: Issue a refund for checkout
      operationId: Refund checkout
      parameters:
      - name: checkoutId
        in: path
        description: Checkout Id retrieved from PointCheckout API.
        required: true
        style: simple
        schema:
          type: string
        example: 1686414183718160542
      - name: amount
        in: query
        description: Refun amount.
        required: true
        style: simple
        schema:
          exclusiveMinimum: true
          type: number
        example: 1500.0
      - name: currency
        in: query
        description: Currency ISO code.
        required: true
        style: simple
        schema:
          maxLength: 3
          minLength: 3
          type: string
        example: USD
      - name: note
        in: path
        description: Refund note.
        required: true
        style: simple
        schema:
          type: string
        example: Out of stock
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      responses:
        "200":
          description: Get Checkout by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_CheckoutResponseWrapper'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetCheckoutErrorResponse'
  /api/mer/v2.0/checkout/{checkoutId}/cancel:
    post:
      tags:
      - Checkout
      description: Cancel pending checkout
      operationId: Cancel Checkout
      parameters:
      - name: checkoutId
        in: path
        description: Checkout Id.
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      responses:
        "200":
          description: Checkout was cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_CheckoutResponseWrapper'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetCheckoutErrorResponse'
  /api/mer/v2.0/checkout/qr:
    post:
      tags:
      - Checkout
      description: Create QR checkout
      operationId: Create QR checkout
      parameters:
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/M_CheckoutQRRequestV2_0'
        required: true
      responses:
        "200":
          description: Checkout details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_CheckoutLinkResponseWrapper'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetCheckoutErrorResponse'
  /api/mer/v2.0/checkout/link:
    post:
      tags:
      - Checkout
      description: Create payment link checkout
      operationId: Create payment link checkout
      parameters:
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/M_CheckoutPaymentLinkRequestV2_0'
        required: true
      responses:
        "200":
          description: Checkout details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_CheckoutLinkResponseWrapper'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetCheckoutErrorResponse'
  /api/mer/v2.0/checkout/ecom:
    post:
      tags:
      - Checkout
      description: Create e-commerce checkout
      operationId: Create e-commerce checkout
      parameters:
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/M_CheckoutECommerceRequestV2_0'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetCheckoutErrorResponse'
        "200":
          description: Checkout details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_CheckoutECommerceResponseWrapper'
  /api/mer/v2.0/checkout:
    get:
      tags:
      - Checkout
      description: Search checkouts.
      operationId: Search Checkouts
      parameters:
      - name: type
        in: query
        description: query by checkout type
        required: false
        style: simple
        schema:
          type: enum
          enum:
          - QR
          - ECOM
          - LINK
      - name: requestId
        in: query
        description: query by requestId used when submitting checkout
        required: false
        style: simple
        schema:
          type: string
      - name: orderId
        in: query
        description: query by orderId associated with checkout
        required: false
        style: simple
        schema:
          type: string
      - name: status
        in: query
        description: comma separated list of checkout statuses
        required: false
        style: simple
        schema:
          type: array
          enum:
          - PENDING
          - AUTHORIZED
          - PAID
          - FAILED
          - CANCELLED
          - EXPIRED
          - REFUNDED
          - PARTIALLY_REFUNDED
      - name: customer.reference
        in: query
        description: query by customer reference Id
        required: false
        style: simple
        schema:
          type: string
      - name: customer.email
        in: query
        description: query by customer email
        required: false
        style: simple
        schema:
          type: string
      - name: customer.phone
        in: query
        description: query by customer phone number
        required: false
        style: simple
        schema:
          type: string
      - name: afterId
        in: query
        description: filer checouts after the provided id
        required: false
        style: simple
        schema:
          type: long
      - name: afterTimestamp
        in: query
        description: "query checkouts created after specific date/time, date format\
          \ is `yyyy-mm-dd HH:MM:SS`"
        required: false
        style: simple
        schema:
          type: timestamp
      - name: page
        in: query
        description: "page number, defult is 0"
        required: false
        style: simple
        schema:
          minimum: 0
          type: number
      - name: size
        in: query
        description: "page size, default is 20"
        required: false
        style: simple
        schema:
          minimum: 1
          type: number
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      responses:
        "200":
          description: List of checkouts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_PageResponseCheckoutResponseWrapper'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetListErrorResponse'
  /api/mer/v2.0/checkout/{checkoutId}:
    get:
      tags:
      - Checkout
      description: Get Checkout by ID
      operationId: Get Checkout
      parameters:
      - name: checkoutId
        in: path
        description: Checkout Id retrieved from PointCheckout API.
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      responses:
        "200":
          description: Get Checkout by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_CheckoutResponseWrapper'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetCheckoutErrorResponse'
  /api/mer/v2.0/branches/{branchId}:
    get:
      tags:
      - Branches
      description: Get branch by Id
      operationId: Get branch by Id
      parameters:
      - name: branchId
        in: path
        description: Branch Id.
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetBranchErrorResponse'
        "200":
          description: Branch details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_BranchResponseWrapper'
      x-sort:
        sort: "10010"
  /api/mer/v2.0/branches:
    get:
      tags:
      - Branches
      description: List all branches associated with merchant
      operationId: Get branches
      parameters:
      - name: page
        in: query
        description: "page number, defult is 0"
        required: false
        style: simple
        schema:
          minimum: 0
          type: number
      - name: size
        in: query
        description: "page size, default is 20"
        required: false
        style: simple
        schema:
          minimum: 1
          type: number
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetListErrorResponse'
        "200":
          description: List of all branches.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/M_BranchResponseWrapper'
      x-sort:
        sort: "10000"
    post:
      tags:
      - Branches
      description: Create new branch
      operationId: Create new branch
      parameters:
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/M_BranchRequestV2_0'
        required: true
      responses:
        "200":
          description: Branch details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_BranchResponseWrapper'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExamplePostBranchErrorResponse'
      x-sort:
        sort: "10020"
  /api/mer/v2.0/branches/{branchId}/disable:
    post:
      tags:
      - Branches
      description: Disable branch
      operationId: Disable branch
      parameters:
      - name: branchId
        in: path
        description: Branch Id.
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetBranchErrorResponse'
        "200":
          description: Branch details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_BranchResponseWrapper'
      x-sort:
        sort: "10030"
  /api/mer/v2.0/branches/{branchId}/enable:
    post:
      tags:
      - Branches
      description: Enable branch
      operationId: Enable branch
      parameters:
      - name: branchId
        in: path
        description: Branch Id.
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetBranchErrorResponse'
        "200":
          description: Branch details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_BranchResponseWrapper'
      x-sort:
        sort: "10040"
  /api/mer/v2.0/webhooks/{webhookId}:
    get:
      tags:
      - Webhooks
      description: Get webhook by Id
      operationId: Get webhook
      parameters:
      - name: webhookId
        in: path
        description: Webhook Id.
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetWebhookErrorResponse'
        "200":
          description: Webhook details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_WebhookResponseWrapper'
      x-sort:
        sort: "10060"
  /api/mer/v2.0/webhooks:
    get:
      tags:
      - Webhooks
      description: List all webhooks associated with merchant
      operationId: Get webhook list
      parameters:
      - name: page
        in: query
        description: "page number, defult is 0"
        required: false
        style: simple
        schema:
          minimum: 0
          type: number
      - name: size
        in: query
        description: "page size, default is 20"
        required: false
        style: simple
        schema:
          minimum: 1
          type: number
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetListErrorResponse'
        "200":
          description: List of all webhooks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/M_WebhookResponseWrapper'
      x-sort:
        sort: "10050"
    post:
      tags:
      - Webhooks
      description: Create new webhook
      operationId: Create new webhook
      parameters:
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/M_WebhookRequestV2_0'
        required: true
      responses:
        "200":
          description: Webhook details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_WebhookResponseWrapper'
      x-sort:
        sort: "10070"
  /api/mer/v2.0/webhooks/{webhookId}/test:
    post:
      tags:
      - Webhooks
      description: Make a test call for the address associated with the webhook.
      operationId: Test webhook
      parameters:
      - name: webhookId
        in: path
        description: Webhook Id.
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetWebhookErrorResponse'
        "200":
          description: Webhook details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_WebhookResponseWrapper'
      x-sort:
        sort: "10080"
  /api/mer/v2.0/webhooks/{webhookId}/disable:
    post:
      tags:
      - Webhooks
      description: Disable webhook.
      operationId: Disable webhook
      parameters:
      - name: webhookId
        in: path
        description: Webhook Id.
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetWebhookErrorResponse'
        "200":
          description: Webhook details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_WebhookResponseWrapper'
      x-sort:
        sort: "10090"
  /api/mer/v2.0/webhooks/{webhookId}/enable:
    post:
      tags:
      - Webhooks
      description: Enable webhook.
      operationId: Enable webhook
      parameters:
      - name: webhookId
        in: path
        description: Webhook Id.
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetWebhookErrorResponse'
        "200":
          description: Webhook details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_WebhookResponseWrapper'
      x-sort:
        sort: "10100"
  /api/mer/v2.0/webhooks/{webhookId}/delete:
    post:
      tags:
      - Webhooks
      description: Delete webhook.
      operationId: Delete webhook
      parameters:
      - name: webhookId
        in: path
        description: Webhook Id.
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-KEY
        in: header
        description: Merchant API Key acquired from PointCheckout
        required: true
        style: simple
        schema:
          type: string
      - name: X-POINTCHECKOUT-SECRET
        in: header
        description: Merchant API Secret
        required: true
        style: simple
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_ExampleGetWebhookErrorResponse'
        "200":
          description: Webhook details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/M_WebhookResponseWrapper'
      x-sort:
        sort: "10110"
components:
  schemas:
    CheckoutAddress:
      required:
      - address1
      - country
      - name
      type: object
      properties:
        name:
          type: string
          description: Address person name.
          example: "[NAME]"
        address1:
          type: string
          description: Address line 1.
          example: "[ADDRESS 1]"
        address2:
          type: string
          description: Address line 2.
          example: "[ADDRESS 2]"
        city:
          type: string
          description: Address city.
          example: "[CITY]"
        state:
          type: string
          description: Address state.
          example: "[STATE]"
        zip:
          type: string
          description: Address zip code.
          example: "12345"
        country:
          type: string
          description: Address country (3 letter ISO country code)
          example: "[COUNTRY 3-LETTER ISO CODE]"
      description: Delivery address
    CheckoutCustomer:
      required:
      - email
      - firstName
      - lastName
      type: object
      properties:
        id:
          type: string
          description: Customer identifier at the merchant system.
          example: "123456"
        firstName:
          type: string
          description: Customer first name.
          example: John
        lastName:
          type: string
          description: Customer last name.
          example: Doe
        email:
          type: string
          description: Customer email address.
          example: "[CUSTOMER EMAIL]"
        phone:
          type: string
          description: Customer phone number with international calling code (Ex.
            971567xxxxxx)..
          example: "[CUSTOMER PHONE]"
      description: Customer associated with this checkout
    CheckoutRequestTotals:
      required:
      - subtotal
      - tax
      type: object
      properties:
        subtotal:
          minimum: 0
          exclusiveMinimum: false
          type: number
        tax:
          minimum: 0
          exclusiveMinimum: false
          type: number
        shipping:
          minimum: 0
          exclusiveMinimum: false
          type: number
        handling:
          minimum: 0
          exclusiveMinimum: false
          type: number
        discount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        skipTotalsValidation:
          type: boolean
    CheckoutResponse:
      type: object
      properties:
        id:
          type: string
          description: Checkout ID at PointCheckout database
          example: "1653241101733169556"
        displayId:
          type: string
          description: "Checkout human readable short key, serves as an easier reference\
            \ to the checkout"
          example: QS3IM5
        requestId:
          type: string
          description: Merchant unique reference ID for this payment request.
          example: ORD-1234-r1
        orderId:
          type: string
          description: Merchant unique reference ID for this checkout.
          example: ORD-1234
        currency:
          type: string
          description: ISO 4217 Currency Code (3 letter currency code) associated
            with this checkout.
          example: USD
        amount:
          type: number
          description: The grand total of the whole order. This is the amount the
            customer must pay.
          example: 1499.99
        cashAmount:
          type: number
          description: Cash amount to be collected from Shopper
          example: 0.0
        branchId:
          type: string
          description: The PointCheckout branch ID associated with this checkout.
          example: "1601731695315563241"
        branchName:
          type: string
          description: The PointCheckout branch name associated with this checkout.
          example: Test store
        status:
          type: string
          description: Current checkout status.
          example: PENDING
          enum:
          - Pending
          - Authorized
          - Paid
          - Failed
          - Cancelled
          - Expired
          - Refunded
          - Partially refunded
        totalRefunded:
          type: number
          description: The total amount refunded from the checkout in checkout currency.
          example: 0.0
        redirectUrl:
          type: string
          description: 'URL for the customer payment redirect. '
          example: http://pcout.co/c/dEHizoxw
        usedPaymentMethod:
          type: string
          description: Payment method used while processing the payment.
          example: CARD
          enum:
          - PointCheckout
          - Card
          - Cash
          - ZainCash
        customer:
          $ref: '#/components/schemas/CheckoutCustomer'
        billingAddress:
          $ref: '#/components/schemas/CheckoutAddress'
        deliveryAddress:
          $ref: '#/components/schemas/CheckoutAddress'
        firebaseDatabase:
          type: string
          description: "Google firebase database name, to be used to receive notifications\
            \ on checkout updates."
          example: pc-test-734bc
        firebaseCollection:
          type: string
          description: "Google firebase collection name, to be used to receive notifications\
            \ on checkout updates."
        firebaseDocument:
          type: string
          description: "Google firebase document name, to be used to receive notifications\
            \ on checkout updates."
        timestamp:
          type: string
          description: The date time of creating the payment in ISO8601 format (yyyy-MM-ddTHH:mm:ss.SSSZZ).
          format: date-time
      description: Result Object.
    ECommerceCheckoutResponse:
      type: object
      properties:
        id:
          type: string
          description: Checkout ID at PointCheckout database
          example: "1653241101733169556"
        displayId:
          type: string
          description: "Checkout human readable short key, serves as an easier reference\
            \ to the checkout"
          example: QS3IM5
        requestId:
          type: string
          description: Merchant unique reference ID for this payment request.
          example: ORD-1234-r1
        orderId:
          type: string
          description: Merchant unique reference ID for this checkout.
          example: ORD-1234
        currency:
          type: string
          description: ISO 4217 Currency Code (3 letter currency code) associated
            with this checkout.
          example: USD
        amount:
          type: number
          description: The grand total of the whole order. This is the amount the
            customer must pay.
          example: 1499.99
        cashAmount:
          type: number
          description: Cash amount to be collected from Shopper
          example: 0.0
        status:
          type: string
          description: Current checkout status.
          example: PENDING
          enum:
          - Pending
          - Authorized
          - Paid
          - Failed
          - Cancelled
          - Expired
          - Refunded
          - Partially refunded
        redirectUrl:
          type: string
          description: 'URL for the customer payment redirect. '
          example: http://pcout.co/c/dEHizoxw
        usedPaymentMethod:
          type: string
          description: Payment method used while processing the payment.
          example: CARD
          enum:
          - PointCheckout
          - Card
          - Cash
          - ZainCash
        customer:
          $ref: '#/components/schemas/CheckoutCustomer'
        billingAddress:
          $ref: '#/components/schemas/CheckoutAddress'
        deliveryAddress:
          $ref: '#/components/schemas/CheckoutAddress'
        firebaseCollection:
          type: string
          description: "Google firebase collection name, to be used to receive notifications\
            \ on checkout updates."
        firebaseDatabase:
          type: string
          description: "Google firebase database name, to be used to receive notifications\
            \ on checkout updates."
          example: pc-test-734bc
        firebaseDocument:
          type: string
          description: "Google firebase document name, to be used to receive notifications\
            \ on checkout updates."
        timestamp:
          type: string
          description: The date time of creating the payment in ISO8601 format (yyyy-MM-ddTHH:mm:ss.SSSZZ).
          format: date-time
        branchId:
          type: string
          description: The PointCheckout branch ID associated with this checkout.
          example: "1601731695315563241"
        branchName:
          type: string
          description: The PointCheckout branch name associated with this checkout.
          example: Test store
        totalRefunded:
          type: number
          description: The total amount refunded from the checkout in checkout currency.
          example: 0.0
      description: Result Object.
    M_BranchRequestV2_0:
      required:
      - currency
      - name
      type: object
      properties:
        name:
          type: string
        currency:
          type: string
        description:
          type: string
    M_BranchResponseV2_0:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        currency:
          type: string
        description:
          type: string
        enabled:
          type: boolean
      description: Result Object.
    M_BranchResponseWrapper:
      type: object
      properties:
        success:
          type: boolean
          description: Whether or not this operation completed successfully.
          example: true
        elapsed:
          type: integer
          description: Time in milliseconds elapsed at server processing this request.
          format: int64
          example: 12
        result:
          $ref: '#/components/schemas/M_BranchResponseV2_0'
    M_CheckoutECommerceRequestV2_0:
      required:
      - amount
      - billingAddress
      - currency
      - customer
      - items
      - orderId
      - requestId
      - returnUrl
      type: object
      properties:
        requestId:
          type: string
        orderId:
          type: string
        currency:
          type: string
        amount:
          minimum: 0
          exclusiveMinimum: true
          type: number
        language:
          maxLength: 3
          minLength: 2
          type: string
        branchId:
          type: integer
          format: int64
        allowedPaymentMethods:
          type: array
          items:
            type: string
            enum:
            - PointCheckout
            - Card
            - Cash
            - ZainCash
        defaultPaymentMethod:
          type: string
          enum:
          - PointCheckout
          - Card
          - Cash
          - ZainCash
        totals:
          $ref: '#/components/schemas/CheckoutRequestTotals'
        returnUrl:
          type: string
        customer:
          $ref: '#/components/schemas/CheckoutCustomer'
        billingAddress:
          $ref: '#/components/schemas/CheckoutAddress'
        deliveryAddress:
          $ref: '#/components/schemas/CheckoutAddress'
        items:
          type: array
          items:
            $ref: '#/components/schemas/M_CheckoutRequestItem'
        expiresIn:
          type: integer
          format: int32
    M_CheckoutECommerceResponseWrapper:
      type: object
      properties:
        success:
          type: boolean
          description: Whether or not this operation completed successfully.
          example: true
        elapsed:
          type: integer
          description: Time in milliseconds elapsed at server processing this request.
          format: int64
          example: 12
        result:
          $ref: '#/components/schemas/ECommerceCheckoutResponse'
    M_CheckoutLinkResponseV2_0:
      type: object
      properties:
        id:
          type: string
          description: Checkout ID at PointCheckout database
          example: "1653241101733169556"
        displayId:
          type: string
          description: "Checkout human readable short key, serves as an easier reference\
            \ to the checkout"
          example: QS3IM5
        requestId:
          type: string
          description: Merchant unique reference ID for this payment request.
          example: ORD-1234-r1
        orderId:
          type: string
          description: Merchant unique reference ID for this checkout.
          example: ORD-1234
        currency:
          type: string
          description: ISO 4217 Currency Code (3 letter currency code) associated
            with this checkout.
          example: USD
        amount:
          type: number
          description: The grand total of the whole order. This is the amount the
            customer must pay.
          example: 1499.99
        cashAmount:
          type: number
          description: Cash amount to be collected from Shopper
          example: 0.0
        status:
          type: string
          description: Current checkout status.
          example: PENDING
          enum:
          - Pending
          - Authorized
          - Paid
          - Failed
          - Cancelled
          - Expired
          - Refunded
          - Partially refunded
        redirectUrl:
          type: string
          description: 'URL for the customer payment redirect. '
          example: http://pcout.co/c/dEHizoxw
        usedPaymentMethod:
          type: string
          description: Payment method used while processing the payment.
          example: CARD
          enum:
          - PointCheckout
          - Card
          - Cash
          - ZainCash
        customer:
          $ref: '#/components/schemas/CheckoutCustomer'
        billingAddress:
          $ref: '#/components/schemas/CheckoutAddress'
        deliveryAddress:
          $ref: '#/components/schemas/CheckoutAddress'
        firebaseCollection:
          type: string
          description: "Google firebase collection name, to be used to receive notifications\
            \ on checkout updates."
        firebaseDatabase:
          type: string
          description: "Google firebase database name, to be used to receive notifications\
            \ on checkout updates."
          example: pc-test-734bc
        firebaseDocument:
          type: string
          description: "Google firebase document name, to be used to receive notifications\
            \ on checkout updates."
        timestamp:
          type: string
          description: The date time of creating the payment in ISO8601 format (yyyy-MM-ddTHH:mm:ss.SSSZZ).
          format: date-time
        branchId:
          type: string
          description: The PointCheckout branch ID associated with this checkout.
          example: "1601731695315563241"
        branchName:
          type: string
          description: The PointCheckout branch name associated with this checkout.
          example: Test store
        totalRefunded:
          type: number
          description: The total amount refunded from the checkout in checkout currency.
          example: 0.0
      description: Result Object.
    M_CheckoutLinkResponseWrapper:
      type: object
      properties:
        success:
          type: boolean
          description: Whether or not this operation completed successfully.
          example: true
        elapsed:
          type: integer
          description: Time in milliseconds elapsed at server processing this request.
          format: int64
          example: 12
        result:
          $ref: '#/components/schemas/M_CheckoutLinkResponseV2_0'
    M_CheckoutPaymentLinkRequestV2_0:
      required:
      - amount
      - currency
      - description
      - orderId
      - requestId
      type: object
      properties:
        requestId:
          type: string
        orderId:
          type: string
        currency:
          type: string
        amount:
          minimum: 0
          exclusiveMinimum: true
          type: number
        language:
          maxLength: 3
          minLength: 2
          type: string
        branchId:
          type: integer
          format: int64
        allowedPaymentMethods:
          type: array
          items:
            type: string
            enum:
            - PointCheckout
            - Card
            - Cash
            - ZainCash
        defaultPaymentMethod:
          type: string
          enum:
          - PointCheckout
          - Card
          - Cash
          - ZainCash
        totals:
          $ref: '#/components/schemas/CheckoutRequestTotals'
        description:
          type: string
        expiresIn:
          maximum: 10080
          minimum: 15
          type: integer
          format: int32
        sendSms:
          type: boolean
        sendEmail:
          type: boolean
        customer:
          $ref: '#/components/schemas/CheckoutCustomer'
        billingAddress:
          $ref: '#/components/schemas/CheckoutAddress'
        deliveryAddress:
          $ref: '#/components/schemas/CheckoutAddress'
        items:
          type: array
          items:
            $ref: '#/components/schemas/M_CheckoutRequestItem'
        returnUrl:
          type: string
    M_CheckoutQRRequestV2_0:
      required:
      - amount
      - currency
      - orderId
      - requestId
      type: object
      properties:
        requestId:
          type: string
        orderId:
          type: string
        currency:
          type: string
        amount:
          minimum: 0
          exclusiveMinimum: true
          type: number
        language:
          maxLength: 3
          minLength: 2
          type: string
        branchId:
          type: integer
          format: int64
        allowedPaymentMethods:
          type: array
          items:
            type: string
            enum:
            - PointCheckout
            - Card
            - Cash
            - ZainCash
        defaultPaymentMethod:
          type: string
          enum:
          - PointCheckout
          - Card
          - Cash
          - ZainCash
        totals:
          $ref: '#/components/schemas/CheckoutRequestTotals'
        description:
          type: string
        deviceReference:
          type: string
        qrSize:
          maximum: 1024
          minimum: 64
          type: integer
          format: int32
        expiresIn:
          maximum: 10080
          minimum: 5
          type: integer
          format: int32
        customer:
          $ref: '#/components/schemas/CheckoutCustomer'
        billingAddress:
          $ref: '#/components/schemas/CheckoutAddress'
        items:
          type: array
          items:
            $ref: '#/components/schemas/M_CheckoutRequestItem'
        deliveryAddress:
          $ref: '#/components/schemas/CheckoutAddress'
        returnUrl:
          type: string
    M_CheckoutRequestItem:
      required:
      - linetotal
      - name
      - quantity
      type: object
      properties:
        name:
          type: string
        sku:
          type: string
        unitprice:
          minimum: 0
          exclusiveMinimum: false
          type: number
        quantity:
          minimum: 0
          exclusiveMinimum: true
          type: number
        linetotal:
          minimum: 0
          exclusiveMinimum: false
          type: number
    M_CheckoutResponseWrapper:
      type: object
      properties:
        success:
          type: boolean
          description: Whether or not this operation completed successfully.
          example: true
        elapsed:
          type: integer
          description: Time in milliseconds elapsed at server processing this request.
          format: int64
          example: 12
        result:
          $ref: '#/components/schemas/CheckoutResponse'
    M_ExampleGetBranchErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether or not this operation completed successfully.
          example: false
        elapsed:
          type: integer
          description: Time in milliseconds elapsed at server processing this request.
          format: int64
          example: 3
        error:
          type: string
          description: Error message
          example: Branch not found for API merchant
    M_ExampleGetCheckoutErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether or not this operation completed successfully.
          example: false
        elapsed:
          type: integer
          description: Time in milliseconds elapsed at server processing this request.
          format: int64
          example: 3
        error:
          type: string
          description: Error message
          example: Checkout not found for API merchant
    M_ExampleGetListErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether or not this operation completed successfully.
          example: false
        elapsed:
          type: integer
          description: Time in milliseconds elapsed at server processing this request.
          format: int64
          example: 3
        error:
          type: string
          description: Error message.
          example: page size parameter must be a positive integer
    M_ExampleGetWebhookErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether or not this operation completed successfully.
          example: false
        elapsed:
          type: integer
          description: Time in milliseconds elapsed at server processing this request.
          format: int64
          example: 3
        error:
          type: string
          description: Error message
          example: Webhook not found for API merchant
    M_ExamplePostBranchErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether or not this operation completed successfully.
          example: false
        elapsed:
          type: integer
          description: Time in milliseconds elapsed at server processing this request.
          format: int64
          example: 3
        error:
          type: string
          description: Error message.
          example: A branch already exists with the same name 'Store'
    M_PageResponseCheckoutResponseWrapper:
      type: object
      properties:
        success:
          type: boolean
          description: Whether or not this operation completed successfully.
          example: true
        elapsed:
          type: integer
          description: Time in milliseconds elapsed at server processing this request.
          format: int64
          example: 12
        result:
          $ref: '#/components/schemas/PageResponseCheckoutResponse'
    M_WebhookRequestV2_0:
      required:
      - address
      type: object
      properties:
        address:
          type: string
    M_WebhookResponseV2_0:
      type: object
      properties:
        id:
          type: string
        hmacKey:
          type: string
        address:
          type: string
        failed:
          type: boolean
        enabled:
          type: boolean
      description: Result Object.
    M_WebhookResponseWrapper:
      type: object
      properties:
        success:
          type: boolean
          description: Whether or not this operation completed successfully.
          example: true
        elapsed:
          type: integer
          description: Time in milliseconds elapsed at server processing this request.
          format: int64
          example: 12
        result:
          $ref: '#/components/schemas/M_WebhookResponseV2_0'
    PageResponseCheckoutResponse:
      type: object
      properties:
        page:
          type: integer
          description: "Item page number, starting with 0"
          format: int32
          example: 0
        size:
          type: integer
          description: Number of items per page
          format: int32
          example: 10
        totalPages:
          type: integer
          description: Total pages
          format: int32
          example: 1
        totalElements:
          type: integer
          description: Total elements in the current page
          format: int64
          example: 7
        content:
          type: array
          description: Page content array
          items:
            $ref: '#/components/schemas/CheckoutResponse'
      description: Result Object.
